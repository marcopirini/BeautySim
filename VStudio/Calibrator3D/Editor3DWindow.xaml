<Window x:Class="Calibrator3D.Editor3DWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:hx="http://helix-toolkit.org/wpf/SharpDX"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:ie="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Calibrator3D"
        xmlns:lang="clr-namespace:BeautySim.Globalization;assembly=BeautySim.Globalization"
        Title="Window3D" WindowStartupLocation="Manual" Width="560" Left="800" Top="5" Height="319" Margin="5,5,5,5"
        WindowStyle="None" ResizeMode="NoResize"
        WindowState="Maximized">
    <Window.Resources>
        <local:ExitingTimeConverter x:Key="ExitingTimeConverter" />
        <local:BooleanToBackgroundConverter x:Key="BooleanToBackgroundConverter" />
    </Window.Resources>
    <!--<Window.DataContext>
        <local:BeautySimClass />
    </Window.DataContext>-->

    <Grid Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="10*" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="5*" />
            <ColumnDefinition Width="1.2*" />
        </Grid.ColumnDefinitions>

        <StackPanel Orientation="Vertical">
            <CheckBox Name="cbArteries" Content="Arteries" />
            <CheckBox Name="cbVeins" Content="Veins" />
            <CheckBox Name="cbSkin" Content="Skin" />
            <CheckBox Name="cbProcerus" Content="Procerus" />
            <CheckBox Name="cbOrbicularis" Content="Orbicularis" />
            <CheckBox Name="cbCorrugator" Content="Corrugators" />
        </StackPanel>

        <StackPanel Name="spProbe" Grid.Row="1" Grid.ColumnSpan="2" HorizontalAlignment="Right" Orientation="Horizontal">
            <Ellipse Name="elSensors" Height="20" Width="20" Fill="Gray" ></Ellipse>
            <Label Width="80" FontSize="13" FontFamily="Segoe UI" VerticalContentAlignment="Center" Foreground="White" Content="{x:Static lang:Language.str_sensors_upper}" />

            <Button Name="bStartRotation" Grid.Row="0"
                          Margin="5"
                          Click="bStartRotation_Click"

                         Width="170">

                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="Close" HorizontalAlignment="Center" Height="40" Width="40" />
                    <TextBlock VerticalAlignment="Center"
                            Text="Start Rotation" Margin="10">
                    </TextBlock>
                </StackPanel>
            </Button>

            <Button Name="bClose" Grid.Row="0"
                          Margin="5"
                          Click="bClose_Click"

                         Width="170">

                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="Close" HorizontalAlignment="Center" Height="40" Width="40" />
                    <TextBlock VerticalAlignment="Center"
                            Text="{x:Static lang:Language.str_close}" Margin="10">
                    </TextBlock>
                </StackPanel>
            </Button>
        </StackPanel>
        <Label Name="lNameStructure" Grid.Row="1" Grid.ColumnSpan="2" Content="{Binding HitStructure}" HorizontalAlignment="Left" Margin="5" FontSize="50">
        </Label>

        <hx:Viewport3DX Grid.Row="0" Grid.RowSpan="1" Grid.ColumnSpan="2" x:Name="hvView3D" ShowViewCube="True" Loaded="hvView3D_Loaded_1"
            ShowCoordinateSystem="True" EffectsManager="{Binding EffectsManager}" PanCursor="Hand" RotateCursor="SizeAll" ZoomCursor="SizeNS" ZoomRectangleCursor="SizeNWSE">
            <hx:Viewport3DX.InputBindings>
                <KeyBinding Key="B" Command="hx:ViewportCommands.BackView" />
                <KeyBinding Key="F" Command="hx:ViewportCommands.FrontView" />
                <KeyBinding Key="U" Command="hx:ViewportCommands.TopView" />
                <KeyBinding Key="D" Command="hx:ViewportCommands.BottomView" />
                <KeyBinding Key="L" Command="hx:ViewportCommands.LeftView" />
                <KeyBinding Key="R" Command="hx:ViewportCommands.RightView" />
                <KeyBinding Command="hx:ViewportCommands.ZoomExtents" Gesture="Control+E" />
                <MouseBinding Command="hx:ViewportCommands.Rotate" Gesture="RightClick" />
                <MouseBinding Command="hx:ViewportCommands.Zoom" Gesture="MiddleClick" />
                <MouseBinding Command="hx:ViewportCommands.Pan" Gesture="Alt+RightClick"/>
            </hx:Viewport3DX.InputBindings>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <ie:CallMethodAction MethodName="OnMouseLeftButtonDownHandler" TargetObject="{Binding}" />
                </i:EventTrigger>
                <!--<i:EventTrigger EventName="MouseMove">
                    <ie:CallMethodAction MethodName="OnMouseMoveHandler" TargetObject="{Binding}" />
                </i:EventTrigger>-->
            </i:Interaction.Triggers>
            <hx:MeshGeometryModel3D Name="indicationSphere"
                CullMode="Back"
                Geometry="{Binding GeometrySphere}"
                Material="{Binding MaterialSphere}"
                Transform="{Binding TransformSphere}">
            </hx:MeshGeometryModel3D>

            <hx:MeshGeometryModel3D Name="indicationSphere2"
                CullMode="Back"
                Geometry="{Binding GeometrySphere2}"
                Material="{Binding MaterialSphere2}"
                Transform="{Binding TransformSphere2}">
            </hx:MeshGeometryModel3D>

            <hx:MeshGeometryModel3D Name="indicationSphere3"
                CullMode="Back"
                Geometry="{Binding GeometrySphere3}"
                Material="{Binding MaterialSphere3}"
                Transform="{Binding TransformSphere3}">
            </hx:MeshGeometryModel3D>

            <hx:GroupModel3D x:Name="modelSphereOrigin" AutomationProperties.Name="modelSphereOrigin">
                <hx:GroupModel3D.Transform>
                    <Transform3DGroup>
                        <TranslateTransform3D OffsetX="37.3" OffsetY="-134.1" OffsetZ="0" />
                    </Transform3DGroup>
                </hx:GroupModel3D.Transform>
                <hx:MeshGeometryModel3D Geometry="{Binding GeometrySphereOrigin}" Material="{Binding MaterialSphereOrigin}" Visibility="Visible">
                </hx:MeshGeometryModel3D>
            </hx:GroupModel3D>


            <hx:GroupModel3D x:Name="modelAntenna" AutomationProperties.Name="modelAntenna" >

                <hx:MeshGeometryModel3D Geometry="{Binding GeometryAntenna}" Material="{Binding MaterialAntenna}" Visibility="{Binding VisibilityAntenna}">
                </hx:MeshGeometryModel3D>
            </hx:GroupModel3D>
            <hx:GroupModel3D Name="gmModels">

                <hx:GroupModel3D.Transform>
                    <Transform3DGroup>
                        <RotateTransform3D>
                            <RotateTransform3D.Rotation>
                                <QuaternionRotation3D Quaternion="{Binding Rotation_Manikin}" />
                            </RotateTransform3D.Rotation>
                        </RotateTransform3D>
                        <TranslateTransform3D OffsetX="37.3" OffsetY="-134.1" OffsetZ="0" />
                    </Transform3DGroup>
                </hx:GroupModel3D.Transform>

                <hx:ItemsModel3D x:Name="groupProcerus">
                    <hx:ItemsModel3D.OctreeManager>
                        <hx:GeometryModel3DOctreeManager AutoDeleteIfEmpty="True" Cubify="True" MinObjectSizeToSplit="4" RecordHitPathBoundingBoxes="False" />
                    </hx:ItemsModel3D.OctreeManager>
                </hx:ItemsModel3D>

                <hx:ItemsModel3D x:Name="groupArteries">
                    <hx:ItemsModel3D.OctreeManager>
                        <hx:GeometryModel3DOctreeManager AutoDeleteIfEmpty="True" Cubify="True" MinObjectSizeToSplit="4" RecordHitPathBoundingBoxes="False" />
                    </hx:ItemsModel3D.OctreeManager>
                </hx:ItemsModel3D>

                <hx:ItemsModel3D x:Name="groupVeins">
                    <hx:ItemsModel3D.OctreeManager>
                        <hx:GeometryModel3DOctreeManager AutoDeleteIfEmpty="True" Cubify="True" MinObjectSizeToSplit="4" RecordHitPathBoundingBoxes="False" />
                    </hx:ItemsModel3D.OctreeManager>
                </hx:ItemsModel3D>

                <hx:ItemsModel3D x:Name="groupNerves">
                    <hx:ItemsModel3D.OctreeManager>
                        <hx:GeometryModel3DOctreeManager AutoDeleteIfEmpty="True" Cubify="True" MinObjectSizeToSplit="4" RecordHitPathBoundingBoxes="False" />
                    </hx:ItemsModel3D.OctreeManager>
                </hx:ItemsModel3D>

                <hx:ItemsModel3D x:Name="groupCorrugators">
                    <hx:ItemsModel3D.OctreeManager>
                        <hx:GeometryModel3DOctreeManager AutoDeleteIfEmpty="True" Cubify="True" MinObjectSizeToSplit="4" RecordHitPathBoundingBoxes="False" />
                    </hx:ItemsModel3D.OctreeManager>
                </hx:ItemsModel3D>

                <hx:ItemsModel3D x:Name="groupOrbicularisSuperiorLateral">
                    <hx:ItemsModel3D.OctreeManager>
                        <hx:GeometryModel3DOctreeManager AutoDeleteIfEmpty="True" Cubify="True" MinObjectSizeToSplit="4" RecordHitPathBoundingBoxes="False" />
                    </hx:ItemsModel3D.OctreeManager>
                </hx:ItemsModel3D>

                <hx:ItemsModel3D x:Name="groupUnderSkin">
                    <hx:ItemsModel3D.OctreeManager>
                        <hx:GeometryModel3DOctreeManager AutoDeleteIfEmpty="True" Cubify="True" MinObjectSizeToSplit="4" RecordHitPathBoundingBoxes="False" />
                    </hx:ItemsModel3D.OctreeManager>
                </hx:ItemsModel3D>

                <hx:ItemsModel3D x:Name="groupSkin">
                    <hx:ItemsModel3D.OctreeManager>
                        <hx:GeometryModel3DOctreeManager AutoDeleteIfEmpty="True" Cubify="True" MinObjectSizeToSplit="4" RecordHitPathBoundingBoxes="False" />
                    </hx:ItemsModel3D.OctreeManager>
                </hx:ItemsModel3D>

                <!--<ModelVisual3D x:Name="modelAntenna" AutomationProperties.Name="modelAntenna">
                <h:BoxVisual3D Length="54" Width="54" Height="54" Center="0,0,0" Fill="Gray" Visible="False" />
            </ModelVisual3D>-->
            </hx:GroupModel3D>
            <hx:GroupModel3D x:Name="modelSensor" AutomationProperties.Name="modelSensor">
                <hx:GroupModel3D.Transform>
                    <Transform3DGroup>
                        <RotateTransform3D>
                            <RotateTransform3D.Rotation>
                                <QuaternionRotation3D Quaternion="{Binding RotationSensor_WRS_real}" />
                            </RotateTransform3D.Rotation>
                        </RotateTransform3D>
                        <TranslateTransform3D OffsetX="{Binding XPosSensor02}" OffsetY="{Binding YPosSensor02}" OffsetZ="{Binding ZPosSensor02}" />
                    </Transform3DGroup>
                </hx:GroupModel3D.Transform>

                <hx:MeshGeometryModel3D Geometry="{Binding GeometrySensor}" Material="{Binding MaterialSensor}" />
                <hx:MeshGeometryModel3D Geometry="{Binding GeometrySensor2}" Material="{Binding MaterialSensor2}" />

            </hx:GroupModel3D>

            <hx:GroupModel3D x:Name="modelNeedle" AutomationProperties.Name="modelNeedle">
                <hx:GroupModel3D.Transform>
                    <Transform3DGroup>

                        <TranslateTransform3D OffsetY="{Binding AxisPositionOffsetNeedle}" />

                        <!--<RotateTransform3D>
                            <RotateTransform3D.Rotation>
                                --><!--<AxisAngleRotation3D Axis="1,0,0" Angle="{Binding RotationAngleOffsetNeedle}" />--><!--
                                <AxisAngleRotation3D Axis="1,0,0" Angle="0" />
                            </RotateTransform3D.Rotation>
                        </RotateTransform3D>-->
                        <RotateTransform3D>
                            <RotateTransform3D.Rotation>
                                <QuaternionRotation3D Quaternion="{Binding RotationSensor_WRS_real}" />
                            </RotateTransform3D.Rotation>
                        </RotateTransform3D>
                        <TranslateTransform3D OffsetX="{Binding XPosSensor02}" OffsetY="{Binding YPosSensor02}" OffsetZ="{Binding ZPosSensor02}" />
                    </Transform3DGroup>
                </hx:GroupModel3D.Transform>

                <hx:MeshGeometryModel3D Geometry="{Binding GeometryTConnector}" Material="{Binding MaterialConnector}" />
                <hx:MeshGeometryModel3D Geometry="{Binding GeometryConnector}" Material="{Binding MaterialConnector}" />
                <hx:MeshGeometryModel3D Geometry="{Binding GeometryNeedle}" Material="{Binding MaterialNeedle}" />
                <hx:MeshGeometryModel3D Geometry="{Binding GeometryCable}" Material="{Binding MaterialCable}" />
            </hx:GroupModel3D>
        </hx:Viewport3DX>

        <!--<ListView x:Name="entranceListView" Loaded="entranceListView_Loaded" Grid.Column="2" ItemsSource="{Binding EntranceDataList}">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Index">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource OrdinalConverter}, ConverterParameter={x:Reference entranceListView}}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Entrance Information">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <TextBlock FontWeight="Bold">
            <Run Text="{Binding StructureEntered}" />
            <Run Text=" - " />
            <Run Text="{Binding EntranceTime, StringFormat=dd/MM/yyyy hh:mm:ss}" FontSize="12" />
            <Run Text=" - " />
                                        <Run Text="{Binding ExitingTime, StringFormat=dd/MM/yyyy hh:mm:ss}" FontSize="12" />
            -->
        <!--<Run Text="{Binding ExitingTime, Converter={StaticResource ExitingTimeConverter}, StringFormat=dd/MM/yyyy hh:mm:ss}" FontSize="12" />-->
        <!--
                                    </TextBlock>
                                    <TextBlock>
                                <Run Text="Yaw: " />
                                <Run Text="{Binding EntryingPointYaw}" />
                                    </TextBlock>
                                    <TextBlock>
                                <Run Text="Pitch: " />
                                <Run Text="{Binding EntryingPointPitch}" />
                                    </TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>-->
        <!--<ListView x:Name="entranceListView" Loaded="entranceListView_Loaded" Grid.Column="2" ItemsSource="{Binding EntranceDataList}">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Entrance Information">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Border x:Name="ItemBorder" BorderThickness="1" BorderBrush="Gray"
                                Background="{Binding ToBeClosed, Converter={StaticResource BooleanToBackgroundConverter}}"
                                Margin="5">
                                    <StackPanel>
                                        <TextBlock FontWeight="Bold">
                                    <Run Text="{Binding Converter={StaticResource OrdinalConverter}, ConverterParameter={x:Reference entranceListView}}" />
                                    <Run Text=" - " />
                                    <Run Text="{Binding StructureEntered}" />
                                        </TextBlock>
                                        <TextBlock>
                                    <Run Text="{Binding EntranceTime, StringFormat=dd/MM/yyyy hh:mm:ss}" FontSize="9" />
                                    <Run Text=" - " />
                                    <Run Text="{Binding ExitingTime, StringFormat=dd/MM/yyyy hh:mm:ss}" FontSize="9" />
                                        </TextBlock>
                                        <TextBlock>
                                    <Run Text="Yaw: " />
                                    <Run Text="{Binding EntryingPointYaw}" />
                                        </TextBlock>
                                        <TextBlock>
                                    <Run Text="Pitch: " />
                                    <Run Text="{Binding EntryingPointPitch}" />
                                        </TextBlock>
                                    </StackPanel>
                                </Border>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>-->

        <ListView x:Name="entranceListView" Loaded="entranceListView_Loaded" Grid.Column="2" ItemsSource="{Binding EntranceDataList}">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Entrance Information">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Border x:Name="ItemBorder" BorderThickness="1" BorderBrush="Gray"
                                Background="{Binding ToBeClosed, Converter={StaticResource BooleanToBackgroundConverter}}"
                                Margin="5"
                                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <StackPanel>
                                        <TextBlock FontWeight="Bold">
    <Run Text="{Binding Index}" />
    <Run Text=" - " />
    <Run Text="{Binding StructureEntered}" />
                                        </TextBlock>
                                        <TextBlock>

                                    <Run Text="{Binding EntranceTime, StringFormat=dd/MM/yyyy hh:mm:ss}" FontSize="9" />
                                    <Run Text=" - " />
                                    <Run Text="{Binding ExitingTime, StringFormat=dd/MM/yyyy hh:mm:ss}" FontSize="9" />
                                        </TextBlock>
                                        <TextBlock>
                                    <Run Text="Yaw: " />
                                    <Run Text="{Binding EntryingPointYaw}" />
                                        </TextBlock>
                                        <TextBlock>
                                    <Run Text="Pitch: " />
                                    <Run Text="{Binding EntryingPointPitch}" />
                                        </TextBlock>
                                        <TextBlock>
                                    <Run Text="Depth: " />
                                    <Run Text="{Binding Depth, StringFormat={}{0:F2}}" />
                                        </TextBlock>
                                    </StackPanel>
                                </Border>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>

        <ListView x:Name="pointsListView3D" Grid.Column="2" ItemsSource="{Binding InjectionPoints3D}" >
            <ListView.View>
                <GridView>
                    <!-- Enum Point Definition Column -->
                    <GridViewColumn Header="Point Definition">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding PointDefinition}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <!-- X Coordinate Column -->
                    <GridViewColumn Header="X">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding X, StringFormat={}{0:F2}}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <!-- Y Coordinate Column -->
                    <GridViewColumn Header="Y">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Y, StringFormat={}{0:F2}}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <!-- Z Coordinate Column -->
                    <GridViewColumn Header="Z">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Z, StringFormat={}{0:F2}}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <!-- Assigned Status Column -->
                    <GridViewColumn Header="Assigned">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsEnabled="False" IsChecked="{Binding Assigned}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>


        <!--<ModelVisual3D x:Name="modelNeedle" AutomationProperties.Name="modelNeedle">
                <ModelVisual3D.Transform>
                    <Transform3DGroup>
                        <RotateTransform3D>
                            <RotateTransform3D.Rotation>
                                <QuaternionRotation3D  Quaternion="{Binding RotationNeedle_WRS_real}" />
                            </RotateTransform3D.Rotation>
                        </RotateTransform3D>
                        <TranslateTransform3D OffsetX="{Binding XPosSensor02}" OffsetY="{Binding YPosSensor02}" OffsetZ="{Binding ZPosSensor02}" />
                    </Transform3DGroup>
                </ModelVisual3D.Transform>

                <h:TruncatedConeVisual3D x:Name="shapeSensor" Normal="1,0,0" BaseRadius="1" TopRadius="1" Fill="Green" BaseCap="True" Origin="-5,0,0" Height="10" ThetaDiv="18" />
                <h:TruncatedConeVisual3D x:Name="shapeConnector" Normal="1,0,0" BaseRadius="3" TopRadius="3" Fill="White" BaseCap="True" Origin="-5,0,0" Height="15" ThetaDiv="18" />

                <h:TruncatedConeVisual3D x:Name="shapeNeedle" Normal="1,0,0" BaseRadius=".4" TopRadius=".1" Fill="Cyan" BaseCap="True" Origin="{Binding OriginNeedle}" Height="{Binding LengthNeedle}" ThetaDiv="18" />
                <h:TruncatedConeVisual3D x:Name="shapecable" Normal="1,0,0" BaseRadius=".5" TopRadius=".5" Fill="Black" BaseCap="True" Origin="-5,0,0" Height="-50" ThetaDiv="18" />
            </ModelVisual3D>
        </hx:Viewport3DX>-->
    </Grid>
</Window>
<Window x:Class="BeautySim2023.Calib3DWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:hx="http://helix-toolkit.org/wpf/SharpDX"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:ie="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:BeautySim2023"
        xmlns:lang="clr-namespace:BeautySim.Globalization;assembly=BeautySim.Globalization"
        Title="Window3D" WindowStartupLocation="Manual" Width="560" Left="800" Top="5" Height="319" Margin="5,5,5,5"
        WindowStyle="None" ResizeMode="NoResize"
        WindowState="Maximized">
    <Window.Resources>
        <local:ExitingTimeConverter x:Key="ExitingTimeConverter" />
        <local:BooleanToBackgroundConverter x:Key="BooleanToBackgroundConverter" />
    </Window.Resources>
    <!--<Window.DataContext>
        <local:BeautySimClass />
    </Window.DataContext>-->

    <Grid Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="10*" />
            <RowDefinition Height="1.5*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*" />
            <ColumnDefinition Width="2.7*" />
        </Grid.ColumnDefinitions>

        <StackPanel Name="spProbe" Grid.Row="1" Grid.ColumnSpan="3" HorizontalAlignment="Right" Orientation="Horizontal">
            <Label Width="80" FontSize="13" FontFamily="Segoe UI" VerticalContentAlignment="Center" Content="{x:Static lang:Language.str_sensors_upper}" />
            <Ellipse Name="elSensors" Height="20" Width="20" Fill="Gray" ></Ellipse>
            <Label Width="80" FontSize="13" FontFamily="Segoe UI" VerticalContentAlignment="Center" Foreground="White"/>

            <Button Name="bCalibrate" 
                    Grid.Row="0"
                    Margin="5"
                    Click="bCalibrate_Click"
                    Height="70"  
                    Width="170">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="Calculator" HorizontalAlignment="Center" Height="40" Width="40" />
                    <TextBlock VerticalAlignment="Center"
                            Text="{x:Static lang:Language.str_calibrate}" Margin="10">
                    </TextBlock>
                </StackPanel>
            </Button>

            <Button Name="bClose" 
                    Grid.Row="0"
                    Margin="5"
                    Click="bClose_Click"
                    Height="70"
                    Width="170">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="Close" HorizontalAlignment="Center" Height="40" Width="40" />
                    <TextBlock VerticalAlignment="Center"
                            Text="{x:Static lang:Language.str_close}" Margin="10">
                    </TextBlock>
                </StackPanel>
            </Button>
        </StackPanel>

        <hx:Viewport3DX Grid.Row="0" Grid.Column="0" x:Name="hvView3D" ShowViewCube="True" Loaded="hvView3D_Loaded_1"
            ShowCoordinateSystem="True" EffectsManager="{Binding EffectsManager}" PanCursor="Hand" RotateCursor="SizeAll" ZoomCursor="SizeNS" ZoomRectangleCursor="SizeNWSE">
            <hx:Viewport3DX.InputBindings>
                <KeyBinding Key="B" Command="hx:ViewportCommands.BackView" />
                <KeyBinding Key="F" Command="hx:ViewportCommands.FrontView" />
                <KeyBinding Key="U" Command="hx:ViewportCommands.TopView" />
                <KeyBinding Key="D" Command="hx:ViewportCommands.BottomView" />
                <KeyBinding Key="L" Command="hx:ViewportCommands.LeftView" />
                <KeyBinding Key="R" Command="hx:ViewportCommands.RightView" />
                <KeyBinding Command="hx:ViewportCommands.ZoomExtents" Gesture="Control+E" />
                <MouseBinding Command="hx:ViewportCommands.Rotate" Gesture="RightClick" />
                <MouseBinding Command="hx:ViewportCommands.Zoom" Gesture="MiddleClick" />
                <MouseBinding Command="hx:ViewportCommands.Pan" Gesture="Alt+RightClick"/>
            </hx:Viewport3DX.InputBindings>
            <i:Interaction.Triggers>

            </i:Interaction.Triggers>
            <hx:MeshGeometryModel3D Name="indicationSphere"
                CullMode="Back"
                Geometry="{Binding GeometrySphere}"
                Material="{Binding MaterialSphere}"
                Transform="{Binding TransformSphere}">
            </hx:MeshGeometryModel3D>

            <hx:MeshGeometryModel3D Name="indicationSphere2"
                CullMode="Back"
                Geometry="{Binding GeometrySphere2}"
                Material="{Binding MaterialSphere2}"
                Transform="{Binding TransformSphere2}">
            </hx:MeshGeometryModel3D>


            <hx:GroupModel3D x:Name="modelSphereOrigin" AutomationProperties.Name="modelSphereOrigin">
                <hx:GroupModel3D.Transform>
                    <Transform3DGroup>
                        <TranslateTransform3D OffsetX="37.3" OffsetY="-134.1" OffsetZ="0" />
                    </Transform3DGroup>
                </hx:GroupModel3D.Transform>
                <hx:MeshGeometryModel3D Geometry="{Binding GeometrySphereOrigin}" Material="{Binding MaterialSphereOrigin}" Visibility="Visible">
                </hx:MeshGeometryModel3D>
            </hx:GroupModel3D>


            <hx:GroupModel3D x:Name="modelAntenna" AutomationProperties.Name="modelAntenna" >

                <hx:MeshGeometryModel3D Geometry="{Binding GeometryAntenna}" Material="{Binding MaterialAntenna}" Visibility="{Binding VisibilityAntenna}">
                </hx:MeshGeometryModel3D>
            </hx:GroupModel3D>
            <hx:GroupModel3D Name="gmModels">

                <hx:GroupModel3D.Transform>
                    <Transform3DGroup>
                        <RotateTransform3D>
                            <RotateTransform3D.Rotation>
                                <QuaternionRotation3D Quaternion="{Binding Rotation_Manikin}" />
                            </RotateTransform3D.Rotation>
                        </RotateTransform3D>
                        <TranslateTransform3D OffsetX="0" OffsetY="0" OffsetZ="0" />
                    </Transform3DGroup>
                </hx:GroupModel3D.Transform>

                <hx:ItemsModel3D x:Name="groupUnderSkin">
                    <hx:ItemsModel3D.OctreeManager>
                        <hx:GeometryModel3DOctreeManager AutoDeleteIfEmpty="True" Cubify="True" MinObjectSizeToSplit="4" RecordHitPathBoundingBoxes="False" />
                    </hx:ItemsModel3D.OctreeManager>
                </hx:ItemsModel3D>

                <hx:ItemsModel3D x:Name="groupSkin">
                    <hx:ItemsModel3D.OctreeManager>
                        <hx:GeometryModel3DOctreeManager AutoDeleteIfEmpty="True" Cubify="True" MinObjectSizeToSplit="4" RecordHitPathBoundingBoxes="False" />
                    </hx:ItemsModel3D.OctreeManager>
                </hx:ItemsModel3D>

                <!--<ModelVisual3D x:Name="modelAntenna" AutomationProperties.Name="modelAntenna">
                <h:BoxVisual3D Length="54" Width="54" Height="54" Center="0,0,0" Fill="Gray" Visible="False" />
            </ModelVisual3D>-->
            </hx:GroupModel3D>
            <hx:GroupModel3D x:Name="modelSensor" AutomationProperties.Name="modelSensor">
                <hx:GroupModel3D.Transform>
                    <Transform3DGroup>
                        <RotateTransform3D>
                            <RotateTransform3D.Rotation>
                                <QuaternionRotation3D Quaternion="{Binding RotationSensor_WRS_real}" />
                            </RotateTransform3D.Rotation>
                        </RotateTransform3D>
                        <TranslateTransform3D OffsetX="{Binding XPosSensor02}" OffsetY="{Binding YPosSensor02}" OffsetZ="{Binding ZPosSensor02}" />
                    </Transform3DGroup>
                </hx:GroupModel3D.Transform>

                <hx:MeshGeometryModel3D Geometry="{Binding GeometrySensor}" Material="{Binding MaterialSensor}" />
                <hx:MeshGeometryModel3D Geometry="{Binding GeometrySensor2}" Material="{Binding MaterialSensor2}" />

            </hx:GroupModel3D>

            <hx:GroupModel3D x:Name="modelNeedle" AutomationProperties.Name="modelNeedle">
                <hx:GroupModel3D.Transform>
                    <Transform3DGroup>

                        <TranslateTransform3D OffsetY="{Binding AxisPositionOffsetNeedle}" />

                        <!--<RotateTransform3D>
                            <RotateTransform3D.Rotation>
                                -->
                        <!--<AxisAngleRotation3D Axis="1,0,0" Angle="{Binding RotationAngleOffsetNeedle}" />-->
                        <!--
                                <AxisAngleRotation3D Axis="1,0,0" Angle="0" />
                            </RotateTransform3D.Rotation>
                        </RotateTransform3D>-->
                        <RotateTransform3D>
                            <RotateTransform3D.Rotation>
                                <QuaternionRotation3D Quaternion="{Binding RotationSensor_WRS_real}" />
                            </RotateTransform3D.Rotation>
                        </RotateTransform3D>
                        <TranslateTransform3D OffsetX="{Binding XPosSensor02}" OffsetY="{Binding YPosSensor02}" OffsetZ="{Binding ZPosSensor02}" />
                    </Transform3DGroup>
                </hx:GroupModel3D.Transform>

                <hx:MeshGeometryModel3D Geometry="{Binding GeometryTConnector}" Material="{Binding MaterialConnector}" />
                <hx:MeshGeometryModel3D Geometry="{Binding GeometryConnector}" Material="{Binding MaterialConnector}" />
                <hx:MeshGeometryModel3D Geometry="{Binding GeometryNeedle}" Material="{Binding MaterialNeedle}" />
                <hx:MeshGeometryModel3D Geometry="{Binding GeometryCable}" Material="{Binding MaterialCable}" />
            </hx:GroupModel3D>
        </hx:Viewport3DX>

        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <ListView x:Name="pointsListView3D" Grid.Row="0" ItemsSource="{Binding InjectionPoints3DCalib}" >
                <ListView.View>
                    <GridView>
                        <!-- Enum Point Definition Column -->
                        <GridViewColumn Header="Point Definition">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding PointDefinition}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <!-- X Coordinate Column -->
                        <GridViewColumn Header="X">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding XRotated, StringFormat={}{0:F2}}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <!-- Y Coordinate Column -->
                        <GridViewColumn Header="Y">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding YRotated, StringFormat={}{0:F2}}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <!-- Z Coordinate Column -->
                        <GridViewColumn Header="Z">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding ZRotated, StringFormat={}{0:F2}}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <!-- Assigned Status Column -->
                        <GridViewColumn Header="Assigned">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsEnabled="False" IsChecked="{Binding Assigned}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn Header="XCalib">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding XAssigned, StringFormat={}{0:F2}}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <!-- Y Coordinate Column -->
                        <GridViewColumn Header="YCalib">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding YAssigned, StringFormat={}{0:F2}}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <!-- Z Coordinate Column -->
                        <GridViewColumn Header="ZCalib">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding ZAssigned, StringFormat={}{0:F2}}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <!-- Assigned Status Column -->
                        <GridViewColumn Header="Calibrated">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsEnabled="False" IsChecked="{Binding AssignedCalibration}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>

            <Button Name="bCalibrateSinglePoint" 
                    Grid.Row="1"
                    Margin="10"
                    Click="bCalibrateSinglePoint_Click"
                    Height="70" Width="170">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="FocusField" HorizontalAlignment="Center" Height="40" Width="40" />
                    <TextBlock VerticalAlignment="Center"
                            Text="{x:Static lang:Language.str_register}" Margin="10">
                    </TextBlock>
                </StackPanel>
            </Button>
        </Grid>

        <Rectangle Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Height="1" Margin="1,1,1,-10" VerticalAlignment="Bottom" Fill="Black"/>
    </Grid>
</Window>